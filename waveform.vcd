$date
	Sun Mar  3 18:38:18 2024
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module main_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end

$scope module dut $end
$var parameter 32 # DATA_WIDTH $end
$var parameter 32 $ ADDR_WIDTH $end
$var parameter 32 % REG_INDEX_WIDTH $end
$var wire 1 & clk $end
$var wire 1 ' reset $end
$var reg 32 ( pc_current [31:0] $end
$var reg 32 ) pc_next [31:0] $end
$var reg 1 * PCen $end
$var reg 32 + instruction [31:0] $end
$var reg 5 , read_reg1 [4:0] $end
$var reg 5 - read_reg2 [4:0] $end
$var reg 5 . write_reg [4:0] $end
$var reg 32 / reg_rdata1 [31:0] $end
$var reg 32 0 reg_rdata2 [31:0] $end
$var reg 32 1 reg_wdata [31:0] $end
$var reg 1 2 reg_write_en $end
$var reg 32 3 alu_result [31:0] $end
$var reg 32 4 immediate_value [31:0] $end
$var reg 4 5 alu_op [3:0] $end
$var reg 1 6 read_en $end
$var reg 1 7 wb_sel $end
$var reg 1 8 write_en $end
$var reg 1 9 mem_read $end
$var reg 1 : mem_write $end
$var reg 32 ; dmem_out [31:0] $end
$var reg 1 < br_taken $end
$var reg 32 = pc [31:0] $end
$var reg 1 > sel_A $end
$var reg 32 ? ALU_in_A [31:0] $end
$var reg 1 @ sel_B $end
$var reg 32 A ALU_in_B [31:0] $end
$var reg 1 B br_type $end

$scope module PCCounter $end
$var parameter 32 C Width $end
$var wire 1 & clk $end
$var wire 1 ' reset $end
$var wire 1 D PCen $end
$var wire 1 E next [31] $end
$var wire 1 F next [30] $end
$var wire 1 G next [29] $end
$var wire 1 H next [28] $end
$var wire 1 I next [27] $end
$var wire 1 J next [26] $end
$var wire 1 K next [25] $end
$var wire 1 L next [24] $end
$var wire 1 M next [23] $end
$var wire 1 N next [22] $end
$var wire 1 O next [21] $end
$var wire 1 P next [20] $end
$var wire 1 Q next [19] $end
$var wire 1 R next [18] $end
$var wire 1 S next [17] $end
$var wire 1 T next [16] $end
$var wire 1 U next [15] $end
$var wire 1 V next [14] $end
$var wire 1 W next [13] $end
$var wire 1 X next [12] $end
$var wire 1 Y next [11] $end
$var wire 1 Z next [10] $end
$var wire 1 [ next [9] $end
$var wire 1 \ next [8] $end
$var wire 1 ] next [7] $end
$var wire 1 ^ next [6] $end
$var wire 1 _ next [5] $end
$var wire 1 ` next [4] $end
$var wire 1 a next [3] $end
$var wire 1 b next [2] $end
$var wire 1 c next [1] $end
$var wire 1 d next [0] $end
$var reg 32 e current [31:0] $end
$upscope $end

$scope module mux_operand_A $end
$var wire 1 f sel $end
$var wire 1 g sel0 [31] $end
$var wire 1 h sel0 [30] $end
$var wire 1 i sel0 [29] $end
$var wire 1 j sel0 [28] $end
$var wire 1 k sel0 [27] $end
$var wire 1 l sel0 [26] $end
$var wire 1 m sel0 [25] $end
$var wire 1 n sel0 [24] $end
$var wire 1 o sel0 [23] $end
$var wire 1 p sel0 [22] $end
$var wire 1 q sel0 [21] $end
$var wire 1 r sel0 [20] $end
$var wire 1 s sel0 [19] $end
$var wire 1 t sel0 [18] $end
$var wire 1 u sel0 [17] $end
$var wire 1 v sel0 [16] $end
$var wire 1 w sel0 [15] $end
$var wire 1 x sel0 [14] $end
$var wire 1 y sel0 [13] $end
$var wire 1 z sel0 [12] $end
$var wire 1 { sel0 [11] $end
$var wire 1 | sel0 [10] $end
$var wire 1 } sel0 [9] $end
$var wire 1 ~ sel0 [8] $end
$var wire 1 !! sel0 [7] $end
$var wire 1 "! sel0 [6] $end
$var wire 1 #! sel0 [5] $end
$var wire 1 $! sel0 [4] $end
$var wire 1 %! sel0 [3] $end
$var wire 1 &! sel0 [2] $end
$var wire 1 '! sel0 [1] $end
$var wire 1 (! sel0 [0] $end
$var wire 1 )! sel1 [31] $end
$var wire 1 *! sel1 [30] $end
$var wire 1 +! sel1 [29] $end
$var wire 1 ,! sel1 [28] $end
$var wire 1 -! sel1 [27] $end
$var wire 1 .! sel1 [26] $end
$var wire 1 /! sel1 [25] $end
$var wire 1 0! sel1 [24] $end
$var wire 1 1! sel1 [23] $end
$var wire 1 2! sel1 [22] $end
$var wire 1 3! sel1 [21] $end
$var wire 1 4! sel1 [20] $end
$var wire 1 5! sel1 [19] $end
$var wire 1 6! sel1 [18] $end
$var wire 1 7! sel1 [17] $end
$var wire 1 8! sel1 [16] $end
$var wire 1 9! sel1 [15] $end
$var wire 1 :! sel1 [14] $end
$var wire 1 ;! sel1 [13] $end
$var wire 1 <! sel1 [12] $end
$var wire 1 =! sel1 [11] $end
$var wire 1 >! sel1 [10] $end
$var wire 1 ?! sel1 [9] $end
$var wire 1 @! sel1 [8] $end
$var wire 1 A! sel1 [7] $end
$var wire 1 B! sel1 [6] $end
$var wire 1 C! sel1 [5] $end
$var wire 1 D! sel1 [4] $end
$var wire 1 E! sel1 [3] $end
$var wire 1 F! sel1 [2] $end
$var wire 1 G! sel1 [1] $end
$var wire 1 H! sel1 [0] $end
$var reg 32 I! out [31:0] $end
$upscope $end

$scope module mux_operand_B $end
$var wire 1 J! sel $end
$var wire 1 K! sel0 [31] $end
$var wire 1 L! sel0 [30] $end
$var wire 1 M! sel0 [29] $end
$var wire 1 N! sel0 [28] $end
$var wire 1 O! sel0 [27] $end
$var wire 1 P! sel0 [26] $end
$var wire 1 Q! sel0 [25] $end
$var wire 1 R! sel0 [24] $end
$var wire 1 S! sel0 [23] $end
$var wire 1 T! sel0 [22] $end
$var wire 1 U! sel0 [21] $end
$var wire 1 V! sel0 [20] $end
$var wire 1 W! sel0 [19] $end
$var wire 1 X! sel0 [18] $end
$var wire 1 Y! sel0 [17] $end
$var wire 1 Z! sel0 [16] $end
$var wire 1 [! sel0 [15] $end
$var wire 1 \! sel0 [14] $end
$var wire 1 ]! sel0 [13] $end
$var wire 1 ^! sel0 [12] $end
$var wire 1 _! sel0 [11] $end
$var wire 1 `! sel0 [10] $end
$var wire 1 a! sel0 [9] $end
$var wire 1 b! sel0 [8] $end
$var wire 1 c! sel0 [7] $end
$var wire 1 d! sel0 [6] $end
$var wire 1 e! sel0 [5] $end
$var wire 1 f! sel0 [4] $end
$var wire 1 g! sel0 [3] $end
$var wire 1 h! sel0 [2] $end
$var wire 1 i! sel0 [1] $end
$var wire 1 j! sel0 [0] $end
$var wire 1 k! sel1 [31] $end
$var wire 1 l! sel1 [30] $end
$var wire 1 m! sel1 [29] $end
$var wire 1 n! sel1 [28] $end
$var wire 1 o! sel1 [27] $end
$var wire 1 p! sel1 [26] $end
$var wire 1 q! sel1 [25] $end
$var wire 1 r! sel1 [24] $end
$var wire 1 s! sel1 [23] $end
$var wire 1 t! sel1 [22] $end
$var wire 1 u! sel1 [21] $end
$var wire 1 v! sel1 [20] $end
$var wire 1 w! sel1 [19] $end
$var wire 1 x! sel1 [18] $end
$var wire 1 y! sel1 [17] $end
$var wire 1 z! sel1 [16] $end
$var wire 1 {! sel1 [15] $end
$var wire 1 |! sel1 [14] $end
$var wire 1 }! sel1 [13] $end
$var wire 1 ~! sel1 [12] $end
$var wire 1 !" sel1 [11] $end
$var wire 1 "" sel1 [10] $end
$var wire 1 #" sel1 [9] $end
$var wire 1 $" sel1 [8] $end
$var wire 1 %" sel1 [7] $end
$var wire 1 &" sel1 [6] $end
$var wire 1 '" sel1 [5] $end
$var wire 1 (" sel1 [4] $end
$var wire 1 )" sel1 [3] $end
$var wire 1 *" sel1 [2] $end
$var wire 1 +" sel1 [1] $end
$var wire 1 ," sel1 [0] $end
$var reg 32 -" out [31:0] $end
$upscope $end

$scope module mux_wb $end
$var wire 1 ." sel $end
$var wire 1 /" sel0 [31] $end
$var wire 1 0" sel0 [30] $end
$var wire 1 1" sel0 [29] $end
$var wire 1 2" sel0 [28] $end
$var wire 1 3" sel0 [27] $end
$var wire 1 4" sel0 [26] $end
$var wire 1 5" sel0 [25] $end
$var wire 1 6" sel0 [24] $end
$var wire 1 7" sel0 [23] $end
$var wire 1 8" sel0 [22] $end
$var wire 1 9" sel0 [21] $end
$var wire 1 :" sel0 [20] $end
$var wire 1 ;" sel0 [19] $end
$var wire 1 <" sel0 [18] $end
$var wire 1 =" sel0 [17] $end
$var wire 1 >" sel0 [16] $end
$var wire 1 ?" sel0 [15] $end
$var wire 1 @" sel0 [14] $end
$var wire 1 A" sel0 [13] $end
$var wire 1 B" sel0 [12] $end
$var wire 1 C" sel0 [11] $end
$var wire 1 D" sel0 [10] $end
$var wire 1 E" sel0 [9] $end
$var wire 1 F" sel0 [8] $end
$var wire 1 G" sel0 [7] $end
$var wire 1 H" sel0 [6] $end
$var wire 1 I" sel0 [5] $end
$var wire 1 J" sel0 [4] $end
$var wire 1 K" sel0 [3] $end
$var wire 1 L" sel0 [2] $end
$var wire 1 M" sel0 [1] $end
$var wire 1 N" sel0 [0] $end
$var wire 1 O" sel1 [31] $end
$var wire 1 P" sel1 [30] $end
$var wire 1 Q" sel1 [29] $end
$var wire 1 R" sel1 [28] $end
$var wire 1 S" sel1 [27] $end
$var wire 1 T" sel1 [26] $end
$var wire 1 U" sel1 [25] $end
$var wire 1 V" sel1 [24] $end
$var wire 1 W" sel1 [23] $end
$var wire 1 X" sel1 [22] $end
$var wire 1 Y" sel1 [21] $end
$var wire 1 Z" sel1 [20] $end
$var wire 1 [" sel1 [19] $end
$var wire 1 \" sel1 [18] $end
$var wire 1 ]" sel1 [17] $end
$var wire 1 ^" sel1 [16] $end
$var wire 1 _" sel1 [15] $end
$var wire 1 `" sel1 [14] $end
$var wire 1 a" sel1 [13] $end
$var wire 1 b" sel1 [12] $end
$var wire 1 c" sel1 [11] $end
$var wire 1 d" sel1 [10] $end
$var wire 1 e" sel1 [9] $end
$var wire 1 f" sel1 [8] $end
$var wire 1 g" sel1 [7] $end
$var wire 1 h" sel1 [6] $end
$var wire 1 i" sel1 [5] $end
$var wire 1 j" sel1 [4] $end
$var wire 1 k" sel1 [3] $end
$var wire 1 l" sel1 [2] $end
$var wire 1 m" sel1 [1] $end
$var wire 1 n" sel1 [0] $end
$var reg 32 o" out [31:0] $end
$upscope $end

$scope module Adder4 $end
$var parameter 32 p" Width $end
$var wire 1 q" in [31] $end
$var wire 1 r" in [30] $end
$var wire 1 s" in [29] $end
$var wire 1 t" in [28] $end
$var wire 1 u" in [27] $end
$var wire 1 v" in [26] $end
$var wire 1 w" in [25] $end
$var wire 1 x" in [24] $end
$var wire 1 y" in [23] $end
$var wire 1 z" in [22] $end
$var wire 1 {" in [21] $end
$var wire 1 |" in [20] $end
$var wire 1 }" in [19] $end
$var wire 1 ~" in [18] $end
$var wire 1 !# in [17] $end
$var wire 1 "# in [16] $end
$var wire 1 ## in [15] $end
$var wire 1 $# in [14] $end
$var wire 1 %# in [13] $end
$var wire 1 &# in [12] $end
$var wire 1 '# in [11] $end
$var wire 1 (# in [10] $end
$var wire 1 )# in [9] $end
$var wire 1 *# in [8] $end
$var wire 1 +# in [7] $end
$var wire 1 ,# in [6] $end
$var wire 1 -# in [5] $end
$var wire 1 .# in [4] $end
$var wire 1 /# in [3] $end
$var wire 1 0# in [2] $end
$var wire 1 1# in [1] $end
$var wire 1 2# in [0] $end
$var reg 32 3# out [31:0] $end
$upscope $end

$scope module mux_pc $end
$var wire 1 4# sel $end
$var wire 1 5# sel0 [31] $end
$var wire 1 6# sel0 [30] $end
$var wire 1 7# sel0 [29] $end
$var wire 1 8# sel0 [28] $end
$var wire 1 9# sel0 [27] $end
$var wire 1 :# sel0 [26] $end
$var wire 1 ;# sel0 [25] $end
$var wire 1 <# sel0 [24] $end
$var wire 1 =# sel0 [23] $end
$var wire 1 ># sel0 [22] $end
$var wire 1 ?# sel0 [21] $end
$var wire 1 @# sel0 [20] $end
$var wire 1 A# sel0 [19] $end
$var wire 1 B# sel0 [18] $end
$var wire 1 C# sel0 [17] $end
$var wire 1 D# sel0 [16] $end
$var wire 1 E# sel0 [15] $end
$var wire 1 F# sel0 [14] $end
$var wire 1 G# sel0 [13] $end
$var wire 1 H# sel0 [12] $end
$var wire 1 I# sel0 [11] $end
$var wire 1 J# sel0 [10] $end
$var wire 1 K# sel0 [9] $end
$var wire 1 L# sel0 [8] $end
$var wire 1 M# sel0 [7] $end
$var wire 1 N# sel0 [6] $end
$var wire 1 O# sel0 [5] $end
$var wire 1 P# sel0 [4] $end
$var wire 1 Q# sel0 [3] $end
$var wire 1 R# sel0 [2] $end
$var wire 1 S# sel0 [1] $end
$var wire 1 T# sel0 [0] $end
$var wire 1 U# sel1 [31] $end
$var wire 1 V# sel1 [30] $end
$var wire 1 W# sel1 [29] $end
$var wire 1 X# sel1 [28] $end
$var wire 1 Y# sel1 [27] $end
$var wire 1 Z# sel1 [26] $end
$var wire 1 [# sel1 [25] $end
$var wire 1 \# sel1 [24] $end
$var wire 1 ]# sel1 [23] $end
$var wire 1 ^# sel1 [22] $end
$var wire 1 _# sel1 [21] $end
$var wire 1 `# sel1 [20] $end
$var wire 1 a# sel1 [19] $end
$var wire 1 b# sel1 [18] $end
$var wire 1 c# sel1 [17] $end
$var wire 1 d# sel1 [16] $end
$var wire 1 e# sel1 [15] $end
$var wire 1 f# sel1 [14] $end
$var wire 1 g# sel1 [13] $end
$var wire 1 h# sel1 [12] $end
$var wire 1 i# sel1 [11] $end
$var wire 1 j# sel1 [10] $end
$var wire 1 k# sel1 [9] $end
$var wire 1 l# sel1 [8] $end
$var wire 1 m# sel1 [7] $end
$var wire 1 n# sel1 [6] $end
$var wire 1 o# sel1 [5] $end
$var wire 1 p# sel1 [4] $end
$var wire 1 q# sel1 [3] $end
$var wire 1 r# sel1 [2] $end
$var wire 1 s# sel1 [1] $end
$var wire 1 t# sel1 [0] $end
$var reg 32 u# out [31:0] $end
$upscope $end

$scope module data_mem $end
$var wire 1 & clk $end
$var wire 1 v# addr [29] $end
$var wire 1 w# addr [28] $end
$var wire 1 x# addr [27] $end
$var wire 1 y# addr [26] $end
$var wire 1 z# addr [25] $end
$var wire 1 {# addr [24] $end
$var wire 1 |# addr [23] $end
$var wire 1 }# addr [22] $end
$var wire 1 ~# addr [21] $end
$var wire 1 !$ addr [20] $end
$var wire 1 "$ addr [19] $end
$var wire 1 #$ addr [18] $end
$var wire 1 $$ addr [17] $end
$var wire 1 %$ addr [16] $end
$var wire 1 &$ addr [15] $end
$var wire 1 '$ addr [14] $end
$var wire 1 ($ addr [13] $end
$var wire 1 )$ addr [12] $end
$var wire 1 *$ addr [11] $end
$var wire 1 +$ addr [10] $end
$var wire 1 ,$ addr [9] $end
$var wire 1 -$ addr [8] $end
$var wire 1 .$ addr [7] $end
$var wire 1 /$ addr [6] $end
$var wire 1 0$ addr [5] $end
$var wire 1 1$ addr [4] $end
$var wire 1 2$ addr [3] $end
$var wire 1 3$ addr [2] $end
$var wire 1 4$ addr [1] $end
$var wire 1 5$ addr [0] $end
$var wire 1 6$ data_in [31] $end
$var wire 1 7$ data_in [30] $end
$var wire 1 8$ data_in [29] $end
$var wire 1 9$ data_in [28] $end
$var wire 1 :$ data_in [27] $end
$var wire 1 ;$ data_in [26] $end
$var wire 1 <$ data_in [25] $end
$var wire 1 =$ data_in [24] $end
$var wire 1 >$ data_in [23] $end
$var wire 1 ?$ data_in [22] $end
$var wire 1 @$ data_in [21] $end
$var wire 1 A$ data_in [20] $end
$var wire 1 B$ data_in [19] $end
$var wire 1 C$ data_in [18] $end
$var wire 1 D$ data_in [17] $end
$var wire 1 E$ data_in [16] $end
$var wire 1 F$ data_in [15] $end
$var wire 1 G$ data_in [14] $end
$var wire 1 H$ data_in [13] $end
$var wire 1 I$ data_in [12] $end
$var wire 1 J$ data_in [11] $end
$var wire 1 K$ data_in [10] $end
$var wire 1 L$ data_in [9] $end
$var wire 1 M$ data_in [8] $end
$var wire 1 N$ data_in [7] $end
$var wire 1 O$ data_in [6] $end
$var wire 1 P$ data_in [5] $end
$var wire 1 Q$ data_in [4] $end
$var wire 1 R$ data_in [3] $end
$var wire 1 S$ data_in [2] $end
$var wire 1 T$ data_in [1] $end
$var wire 1 U$ data_in [0] $end
$var wire 1 V$ w_en $end
$var wire 1 W$ read_en $end
$var reg 32 X$ data_out [31:0] $end
$upscope $end

$scope module inst_mem $end
$var parameter 32 Y$ AddrWidth $end
$var wire 1 Z$ address [31] $end
$var wire 1 [$ address [30] $end
$var wire 1 \$ address [29] $end
$var wire 1 ]$ address [28] $end
$var wire 1 ^$ address [27] $end
$var wire 1 _$ address [26] $end
$var wire 1 `$ address [25] $end
$var wire 1 a$ address [24] $end
$var wire 1 b$ address [23] $end
$var wire 1 c$ address [22] $end
$var wire 1 d$ address [21] $end
$var wire 1 e$ address [20] $end
$var wire 1 f$ address [19] $end
$var wire 1 g$ address [18] $end
$var wire 1 h$ address [17] $end
$var wire 1 i$ address [16] $end
$var wire 1 j$ address [15] $end
$var wire 1 k$ address [14] $end
$var wire 1 l$ address [13] $end
$var wire 1 m$ address [12] $end
$var wire 1 n$ address [11] $end
$var wire 1 o$ address [10] $end
$var wire 1 p$ address [9] $end
$var wire 1 q$ address [8] $end
$var wire 1 r$ address [7] $end
$var wire 1 s$ address [6] $end
$var wire 1 t$ address [5] $end
$var wire 1 u$ address [4] $end
$var wire 1 v$ address [3] $end
$var wire 1 w$ address [2] $end
$var wire 1 x$ address [1] $end
$var wire 1 y$ address [0] $end
$var reg 32 z$ instruction [31:0] $end
$upscope $end

$scope module alu_1 $end
$var parameter 32 {$ Data_Width $end
$var parameter 32 |$ Op_Width $end
$var parameter 4 }$ signed_add $end
$var parameter 4 ~$ signed_sub $end
$var parameter 4 !% bitwise_sll $end
$var parameter 4 "% set_less_than $end
$var parameter 4 #% set_less_than_unsigned $end
$var parameter 4 $% bitwise_xor $end
$var parameter 4 %% bitwise_srl $end
$var parameter 4 &% bitwise_sra $end
$var parameter 4 '% bitwise_or $end
$var parameter 4 (% bitwise_and $end
$var wire 1 )% operand_a_i [31] $end
$var wire 1 *% operand_a_i [30] $end
$var wire 1 +% operand_a_i [29] $end
$var wire 1 ,% operand_a_i [28] $end
$var wire 1 -% operand_a_i [27] $end
$var wire 1 .% operand_a_i [26] $end
$var wire 1 /% operand_a_i [25] $end
$var wire 1 0% operand_a_i [24] $end
$var wire 1 1% operand_a_i [23] $end
$var wire 1 2% operand_a_i [22] $end
$var wire 1 3% operand_a_i [21] $end
$var wire 1 4% operand_a_i [20] $end
$var wire 1 5% operand_a_i [19] $end
$var wire 1 6% operand_a_i [18] $end
$var wire 1 7% operand_a_i [17] $end
$var wire 1 8% operand_a_i [16] $end
$var wire 1 9% operand_a_i [15] $end
$var wire 1 :% operand_a_i [14] $end
$var wire 1 ;% operand_a_i [13] $end
$var wire 1 <% operand_a_i [12] $end
$var wire 1 =% operand_a_i [11] $end
$var wire 1 >% operand_a_i [10] $end
$var wire 1 ?% operand_a_i [9] $end
$var wire 1 @% operand_a_i [8] $end
$var wire 1 A% operand_a_i [7] $end
$var wire 1 B% operand_a_i [6] $end
$var wire 1 C% operand_a_i [5] $end
$var wire 1 D% operand_a_i [4] $end
$var wire 1 E% operand_a_i [3] $end
$var wire 1 F% operand_a_i [2] $end
$var wire 1 G% operand_a_i [1] $end
$var wire 1 H% operand_a_i [0] $end
$var wire 1 I% operand_b_i [31] $end
$var wire 1 J% operand_b_i [30] $end
$var wire 1 K% operand_b_i [29] $end
$var wire 1 L% operand_b_i [28] $end
$var wire 1 M% operand_b_i [27] $end
$var wire 1 N% operand_b_i [26] $end
$var wire 1 O% operand_b_i [25] $end
$var wire 1 P% operand_b_i [24] $end
$var wire 1 Q% operand_b_i [23] $end
$var wire 1 R% operand_b_i [22] $end
$var wire 1 S% operand_b_i [21] $end
$var wire 1 T% operand_b_i [20] $end
$var wire 1 U% operand_b_i [19] $end
$var wire 1 V% operand_b_i [18] $end
$var wire 1 W% operand_b_i [17] $end
$var wire 1 X% operand_b_i [16] $end
$var wire 1 Y% operand_b_i [15] $end
$var wire 1 Z% operand_b_i [14] $end
$var wire 1 [% operand_b_i [13] $end
$var wire 1 \% operand_b_i [12] $end
$var wire 1 ]% operand_b_i [11] $end
$var wire 1 ^% operand_b_i [10] $end
$var wire 1 _% operand_b_i [9] $end
$var wire 1 `% operand_b_i [8] $end
$var wire 1 a% operand_b_i [7] $end
$var wire 1 b% operand_b_i [6] $end
$var wire 1 c% operand_b_i [5] $end
$var wire 1 d% operand_b_i [4] $end
$var wire 1 e% operand_b_i [3] $end
$var wire 1 f% operand_b_i [2] $end
$var wire 1 g% operand_b_i [1] $end
$var wire 1 h% operand_b_i [0] $end
$var wire 1 i% alu_op [3] $end
$var wire 1 j% alu_op [2] $end
$var wire 1 k% alu_op [1] $end
$var wire 1 l% alu_op [0] $end
$var reg 32 m% result_o [31:0] $end
$upscope $end

$scope module reg_file $end
$var wire 1 & clk $end
$var wire 1 n% write_enable $end
$var wire 1 o% write_address [4] $end
$var wire 1 p% write_address [3] $end
$var wire 1 q% write_address [2] $end
$var wire 1 r% write_address [1] $end
$var wire 1 s% write_address [0] $end
$var wire 1 t% write_data [31] $end
$var wire 1 u% write_data [30] $end
$var wire 1 v% write_data [29] $end
$var wire 1 w% write_data [28] $end
$var wire 1 x% write_data [27] $end
$var wire 1 y% write_data [26] $end
$var wire 1 z% write_data [25] $end
$var wire 1 {% write_data [24] $end
$var wire 1 |% write_data [23] $end
$var wire 1 }% write_data [22] $end
$var wire 1 ~% write_data [21] $end
$var wire 1 !& write_data [20] $end
$var wire 1 "& write_data [19] $end
$var wire 1 #& write_data [18] $end
$var wire 1 $& write_data [17] $end
$var wire 1 %& write_data [16] $end
$var wire 1 && write_data [15] $end
$var wire 1 '& write_data [14] $end
$var wire 1 (& write_data [13] $end
$var wire 1 )& write_data [12] $end
$var wire 1 *& write_data [11] $end
$var wire 1 +& write_data [10] $end
$var wire 1 ,& write_data [9] $end
$var wire 1 -& write_data [8] $end
$var wire 1 .& write_data [7] $end
$var wire 1 /& write_data [6] $end
$var wire 1 0& write_data [5] $end
$var wire 1 1& write_data [4] $end
$var wire 1 2& write_data [3] $end
$var wire 1 3& write_data [2] $end
$var wire 1 4& write_data [1] $end
$var wire 1 5& write_data [0] $end
$var wire 1 6& read_address1 [4] $end
$var wire 1 7& read_address1 [3] $end
$var wire 1 8& read_address1 [2] $end
$var wire 1 9& read_address1 [1] $end
$var wire 1 :& read_address1 [0] $end
$var wire 1 ;& read_address2 [4] $end
$var wire 1 <& read_address2 [3] $end
$var wire 1 =& read_address2 [2] $end
$var wire 1 >& read_address2 [1] $end
$var wire 1 ?& read_address2 [0] $end
$var reg 32 @& read_data1 [31:0] $end
$var reg 32 A& read_data2 [31:0] $end
$upscope $end

$scope module imm_gen $end
$var wire 1 B& In [31] $end
$var wire 1 C& In [30] $end
$var wire 1 D& In [29] $end
$var wire 1 E& In [28] $end
$var wire 1 F& In [27] $end
$var wire 1 G& In [26] $end
$var wire 1 H& In [25] $end
$var wire 1 I& In [24] $end
$var wire 1 J& In [23] $end
$var wire 1 K& In [22] $end
$var wire 1 L& In [21] $end
$var wire 1 M& In [20] $end
$var wire 1 N& In [19] $end
$var wire 1 O& In [18] $end
$var wire 1 P& In [17] $end
$var wire 1 Q& In [16] $end
$var wire 1 R& In [15] $end
$var wire 1 S& In [14] $end
$var wire 1 T& In [13] $end
$var wire 1 U& In [12] $end
$var wire 1 V& In [11] $end
$var wire 1 W& In [10] $end
$var wire 1 X& In [9] $end
$var wire 1 Y& In [8] $end
$var wire 1 Z& In [7] $end
$var wire 1 [& In [6] $end
$var wire 1 \& In [5] $end
$var wire 1 ]& In [4] $end
$var wire 1 ^& In [3] $end
$var wire 1 _& In [2] $end
$var wire 1 `& In [1] $end
$var wire 1 a& In [0] $end
$var reg 32 b& Out [31:0] $end
$upscope $end

$scope module branch $end
$var wire 1 c& br_type $end
$var wire 1 d& funct3 [2] $end
$var wire 1 e& funct3 [1] $end
$var wire 1 f& funct3 [0] $end
$var wire 1 g& rs1_data [31] $end
$var wire 1 h& rs1_data [30] $end
$var wire 1 i& rs1_data [29] $end
$var wire 1 j& rs1_data [28] $end
$var wire 1 k& rs1_data [27] $end
$var wire 1 l& rs1_data [26] $end
$var wire 1 m& rs1_data [25] $end
$var wire 1 n& rs1_data [24] $end
$var wire 1 o& rs1_data [23] $end
$var wire 1 p& rs1_data [22] $end
$var wire 1 q& rs1_data [21] $end
$var wire 1 r& rs1_data [20] $end
$var wire 1 s& rs1_data [19] $end
$var wire 1 t& rs1_data [18] $end
$var wire 1 u& rs1_data [17] $end
$var wire 1 v& rs1_data [16] $end
$var wire 1 w& rs1_data [15] $end
$var wire 1 x& rs1_data [14] $end
$var wire 1 y& rs1_data [13] $end
$var wire 1 z& rs1_data [12] $end
$var wire 1 {& rs1_data [11] $end
$var wire 1 |& rs1_data [10] $end
$var wire 1 }& rs1_data [9] $end
$var wire 1 ~& rs1_data [8] $end
$var wire 1 !' rs1_data [7] $end
$var wire 1 "' rs1_data [6] $end
$var wire 1 #' rs1_data [5] $end
$var wire 1 $' rs1_data [4] $end
$var wire 1 %' rs1_data [3] $end
$var wire 1 &' rs1_data [2] $end
$var wire 1 '' rs1_data [1] $end
$var wire 1 (' rs1_data [0] $end
$var wire 1 )' rs2_data [31] $end
$var wire 1 *' rs2_data [30] $end
$var wire 1 +' rs2_data [29] $end
$var wire 1 ,' rs2_data [28] $end
$var wire 1 -' rs2_data [27] $end
$var wire 1 .' rs2_data [26] $end
$var wire 1 /' rs2_data [25] $end
$var wire 1 0' rs2_data [24] $end
$var wire 1 1' rs2_data [23] $end
$var wire 1 2' rs2_data [22] $end
$var wire 1 3' rs2_data [21] $end
$var wire 1 4' rs2_data [20] $end
$var wire 1 5' rs2_data [19] $end
$var wire 1 6' rs2_data [18] $end
$var wire 1 7' rs2_data [17] $end
$var wire 1 8' rs2_data [16] $end
$var wire 1 9' rs2_data [15] $end
$var wire 1 :' rs2_data [14] $end
$var wire 1 ;' rs2_data [13] $end
$var wire 1 <' rs2_data [12] $end
$var wire 1 =' rs2_data [11] $end
$var wire 1 >' rs2_data [10] $end
$var wire 1 ?' rs2_data [9] $end
$var wire 1 @' rs2_data [8] $end
$var wire 1 A' rs2_data [7] $end
$var wire 1 B' rs2_data [6] $end
$var wire 1 C' rs2_data [5] $end
$var wire 1 D' rs2_data [4] $end
$var wire 1 E' rs2_data [3] $end
$var wire 1 F' rs2_data [2] $end
$var wire 1 G' rs2_data [1] $end
$var wire 1 H' rs2_data [0] $end
$var reg 1 I' take_branch $end
$upscope $end

$scope module ctrlr $end
$var wire 1 J' opcode [6] $end
$var wire 1 K' opcode [5] $end
$var wire 1 L' opcode [4] $end
$var wire 1 M' opcode [3] $end
$var wire 1 N' opcode [2] $end
$var wire 1 O' opcode [1] $end
$var wire 1 P' opcode [0] $end
$var wire 1 Q' funct3 [2] $end
$var wire 1 R' funct3 [1] $end
$var wire 1 S' funct3 [0] $end
$var wire 1 T' funct7 [6] $end
$var wire 1 U' funct7 [5] $end
$var wire 1 V' funct7 [4] $end
$var wire 1 W' funct7 [3] $end
$var wire 1 X' funct7 [2] $end
$var wire 1 Y' funct7 [1] $end
$var wire 1 Z' funct7 [0] $end
$var reg 4 [' alu_op [3:0] $end
$var reg 1 \' reg_write $end
$var reg 1 ]' PCen $end
$var reg 1 ^' read_en $end
$var reg 1 _' wb_sel $end
$var reg 1 `' write_en $end
$var reg 1 a' br_type $end
$var reg 1 b' sel_A $end
$var reg 1 c' sel_B $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
bx (
bx )
1*
bx +
bx ,
bx -
bx .
bx /
bx 0
bx 1
12
bx 3
bx 4
b1111 5
06
07
08
x9
x:
bx ;
0<
bx =
1>
bx ?
x@
bx A
0B
bx e
bx I!
bx -"
bx o"
bx 3#
bx u#
bx X$
bx z$
bx m%
bx @&
bx A&
bx b&
0I'
b1111 ['
1\'
1]'
0^'
0_'
0`'
0a'
1b'
xc'
b100000 #
b100000 $
b101 %
b100000 C
b100000 p"
b100000 Y$
b100000 {$
b100 |$
b0 }$
b1 ~$
b10 !%
b11 "%
b100 #%
b101 $%
b110 %%
b111 &%
b1000 '%
b1001 (%
0&
1'
1D
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
1f
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
xJ!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
0."
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
04#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
0V$
0W$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
1l%
1k%
1j%
1i%
1n%
xs%
xr%
xq%
xp%
xo%
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
x:&
x9&
x8&
x7&
x6&
x?&
x>&
x=&
x<&
x;&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
0c&
xf&
xe&
xd&
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xS'
xR'
xQ'
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
$end
#5000
1!
1&
0"
0'
b0 e
b0 (
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
b10100000000000010010011 z$
b100 3#
b100 )
b10100000000000010010011 +
1s%
0r%
0q%
0p%
0o%
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
1P'
1O'
0N'
0M'
1L'
0K'
0J'
0f&
0e&
0d&
1?&
0>&
1=&
0<&
0;&
0:&
09&
08&
07&
06&
1a&
1`&
0_&
0^&
1]&
0\&
0[&
1Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
1M&
0L&
1K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0T#
0S#
1R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
b100 u#
b0 @&
1_'
0c'
b0 ['
b0 5
0@
17
b0 /
b100 =
0d
0c
1b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0J!
1."
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0('
0''
0&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0l%
0k%
0j%
0i%
b0 I!
b0 ?
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
b101 b&
b101 4
1j!
0i!
1h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
b101 -"
b101 A
1h%
0g%
1f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
b101 m%
b101 3
15$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
1n"
0m"
1l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
1t#
0s#
1r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
b101 o"
b101 1
15&
04&
13&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
#10000
0!
0&
#15000
1!
1&
b100 e
b100 (
10#
1w$
b11000000000000100010011 z$
b1000 3#
b1000 )
b11000000000000100010011 +
0s%
1r%
0?&
1>&
0Z&
1Y&
0M&
1L&
0R#
1Q#
1&!
b1000 u#
b1000 =
0b
1a
b110 b&
b110 4
0j!
1i!
b110 -"
b110 A
0h%
1g%
b110 m%
b110 3
0n"
1m"
0t#
1s#
b110 o"
b110 1
05&
14&
#20000
0!
0&
#25000
1!
1&
b1000 e
b1000 (
00#
1/#
0w$
1v$
b1000001000000110110011 z$
b1100 3#
b1100 )
b1000001000000110110011 +
1s%
1K'
0=&
1:&
1\&
1Z&
1R&
0K&
1R#
0&!
1%!
b1100 u#
1c'
b101 @&
b110 A&
b110 0
b101 /
1@
b1100 =
1b
0U$
1T$
1S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
1H!
1F!
1('
1&'
0,"
1+"
1*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0H'
1G'
1F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
1J!
b101 I!
b101 ?
1H%
1F%
b1011 m%
b1011 3
05$
14$
1n"
0l"
1k"
1t#
0r#
1q#
b1011 o"
b1011 1
15&
03&
12&
b0 b&
b0 4
0i!
0h!
#30000
0!
0&
#35000
1!
1&
b1100 e
b1100 (
10#
1w$
b1100000010000000100011 z$
b10000 3#
b10000 )
b1100000010000000100011 +
0s%
0r%
1R'
0L'
1e&
1?&
0:&
0]&
0Z&
0Y&
1T&
0R&
1M&
0R#
0Q#
1P#
1&!
b10000 u#
0\'
1`'
0_'
0c'
b0 @&
b1011 A&
b1011 0
b0 /
0@
07
18
02
b10000 =
1V$
0n%
0b
0a
1`
1U$
0S$
1R$
0H!
0F!
0('
0&'
1,"
0*"
1)"
1H'
0F'
1E'
0J!
0."
bx o"
b0 -"
b0 I!
b0 ?
b0 A
bx 1
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
0g%
0f%
0H%
0F%
b0 m%
b0 3
04$
0n"
0m"
0k"
0t#
0s#
0q#
#40000
0!
0&
b1011 X$
b1011 ;
1N"
1M"
0L"
1K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
b1011 o"
b1011 1
15&
14&
03&
12&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
#45000
1!
1&
b10000 e
b10000 (
00#
0/#
1.#
0w$
0v$
1u$
b101000110010111 z$
b10100 3#
b10100 )
b101000110010111 +
1s%
1r%
1S'
0R'
1Q'
1N'
1L'
0K'
1f&
0e&
1d&
0?&
0>&
1_&
1]&
0\&
1Z&
1Y&
1U&
0T&
1S&
0M&
0L&
1R#
0&!
0%!
1$!
b10100 u#
b0 A&
1\'
0`'
1_'
0b'
0>
17
08
12
b0 0
b10100 =
0V$
1n%
1b
0U$
0T$
0R$
0f
1."
0,"
0+"
0)"
0H'
0G'
0E'
b0 o"
b10000 I!
b10000 ?
b0 1
05&
04&
02&
1D%
b10000 m%
b10000 3
13$
1j"
1p#
b10000 o"
bx X$
bx ;
b10000 1
11&
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
b101000000000000 b&
b101000000000000 4
1^!
1\!
b101000000000000 -"
b101000000000000 A
1\%
1Z%
b101000000010000 m%
b101000000010000 3
1+$
1)$
1b"
1`"
1h#
1f#
b101000000010000 o"
b101000000010000 1
1)&
1'&
#50000
0!
0&
#55000
1!
1&
b10100 e
b10100 (
10#
1w$
b101000110110111 z$
b11000 3#
b11000 )
b101000110110111 +
1K'
1\&
0R#
1Q#
1&!
b10100 I!
b11000 u#
1b'
1>
b11000 =
b10100 ?
0b
1a
1f
1F%
b101000000010100 m%
b0 I!
b0 ?
b101000000010100 3
15$
1l"
1r#
0F%
0D%
b101000000000000 m%
b101000000010100 o"
b101000000010100 1
b101000000000000 3
13&
05$
03$
0l"
0j"
0r#
0p#
b101000000000000 o"
b101000000000000 1
03&
01&
#60000
0!
0&
#65000
1!
1&
b11000 e
b11000 (
00#
1/#
0w$
1v$
b1000000000000010010011 z$
b11100 3#
b11100 )
b1000000000000010010011 +
0r%
0S'
0Q'
0N'
0K'
0f&
0d&
1>&
0_&
0\&
0Y&
0U&
0S&
1L&
1R#
0&!
1%!
b11100 u#
b110 A&
b110 0
b11100 =
1b
1T$
1S$
1+"
1*"
1G'
1F'
b10 b&
b10 4
1i!
0^!
0\!
b10 -"
b10 A
1g%
0\%
0Z%
b10 m%
b10 3
0+$
0)$
1m"
0b"
0`"
1s#
0h#
0f#
b10 o"
b1011 X$
b1011 ;
b10 1
14&
0)&
0'&
1N"
1M"
0L"
1K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
#70000
0!
0&
#75000
1!
1&
b11100 e
b11100 (
10#
1w$
b1000000000000100010011 z$
b100000 3#
b100000 )
b1000000000000100010011 +
0s%
1r%
0Z&
1Y&
0R#
0Q#
0P#
1O#
1&!
b100000 u#
b100000 =
0b
0a
0`
1_
#80000
0!
0&
#85000
1!
1&
b100000 e
b100000 (
00#
0/#
0.#
1-#
0w$
0v$
0u$
1t$
b10100000000000110010011 z$
b100100 3#
b100100 )
b10100000000000110010011 +
1s%
1?&
0>&
1=&
1Z&
1M&
0L&
1K&
1R#
0&!
0%!
0$!
1#!
b100100 u#
bx A&
bx 0
b100100 =
1b
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
b101 b&
b101 4
1j!
0i!
1h!
b101 -"
b101 A
1h%
0g%
1f%
b101 m%
b101 3
15$
1n"
0m"
1l"
1t#
0s#
1r#
b101 o"
bx X$
bx ;
b101 1
15&
04&
13&
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
#90000
0!
0&
#95000
1!
1&
b100100 e
b100100 (
10#
1w$
b1000001000010001100011 z$
b101000 3#
b101000 )
b1000001000010001100011 +
0s%
0r%
1p%
0L'
1K'
1J'
0?&
1>&
0=&
1:&
0]&
1\&
1[&
0Z&
0Y&
1W&
1R&
0M&
1L&
0K&
0R#
1Q#
1&!
b101000 u#
0\'
1a'
0b'
b10 @&
b10 A&
b10 0
b10 /
0>
1B
02
b101000 =
0n%
0b
1a
0U$
1T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
1G!
1''
0,"
1+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0H'
1G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0f
1c&
1I'
b100100 I!
b100100 ?
1<
1F%
1C%
14#
b101 u#
b101001 m%
b101001 3
b101 =
1d
1b
0a
0_
05$
14$
12$
0l"
1k"
1i"
0r#
1q#
1o#
b101001 u#
b101001 o"
b101001 1
b101001 =
0b
1a
1_
03&
12&
10&
b1000 b&
b1000 4
0j!
0h!
1g!
b1000 -"
b1000 A
0h%
0f%
1e%
b101100 m%
b101100 3
15$
0n"
1l"
0t#
1r#
b101100 u#
b101100 o"
b101100 1
b101100 =
0d
1b
05&
13&
#100000
0!
0&
#105000
1!
1&
b101100 e
b101100 (
1/#
1v$
b1100000010000000100011 z$
b110000 3#
b110000 )
b1100000010000000100011 +
0p%
1R'
0J'
1e&
1?&
0:&
0[&
0W&
1T&
0R&
1M&
0Q#
1P#
1%!
b101100 I!
b0 @&
b101 A&
0I'
1`'
0_'
0a'
1b'
1>
0B
07
18
0<
b101 0
b0 /
b101100 ?
1V$
1U$
0T$
1S$
1f
0c&
0."
04#
1E%
0G!
0''
1,"
0+"
1*"
1H'
0G'
1F'
b110100 m%
b110000 u#
bx o"
b0 I!
b0 ?
bx 1
b110000 =
b110100 3
0b
0a
1`
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
04$
13$
0k"
1j"
0q#
1p#
0F%
0E%
0C%
b1000 m%
b1000 3
05$
14$
03$
02$
0l"
1k"
0j"
0i"
0r#
1q#
0p#
0o#
b0 b&
b0 4
0g!
b0 -"
b0 A
0e%
b0 m%
b0 3
04$
0k"
0q#
b1011 X$
b1011 ;
1N"
1M"
0L"
1K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
b1011 o"
b1011 1
15&
14&
03&
12&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
#110000
0!
0&
b101 X$
b101 ;
0M"
1L"
0K"
b101 o"
b101 1
04&
13&
02&
#115000
1!
1&
b110000 e
b110000 (
00#
0/#
1.#
0w$
0v$
1u$
bx z$
b110100 3#
b110100 )
bx +
xs%
xr%
xq%
xp%
xo%
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xf&
xe&
xd&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
1R#
0&!
0%!
1$!
b110100 u#
bx @&
bx A&
b1111 ['
1\'
0`'
08
12
b1111 5
bx 0
bx /
b110100 =
0V$
1n%
1b
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
1l%
1k%
1j%
1i%
bx I!
bx ?
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
#120000
0!
0&
#125000
1!
1&
b110100 e
b110100 (
10#
1w$
b111000 3#
b111000 )
0R#
1Q#
1&!
b111000 u#
b111000 =
0b
1a
#130000
0!
0&
#135000
1!
1&
b111000 e
b111000 (
00#
1/#
0w$
1v$
b111100 3#
b111100 )
1R#
0&!
1%!
b111100 u#
b111100 =
1b
#140000
0!
0&
#145000
1!
1&
b111100 e
b111100 (
10#
1w$
b1000000 3#
b1000000 )
0R#
0Q#
0P#
0O#
1N#
1&!
b1000000 u#
b1000000 =
0b
0a
0`
0_
1^
#150000
0!
0&
#155000
1!
1&
b1000000 e
b1000000 (
00#
0/#
0.#
0-#
1,#
0w$
0v$
0u$
0t$
1s$
b1000100 3#
b1000100 )
1R#
0&!
0%!
0$!
0#!
1"!
b1000100 u#
b1000100 =
1b
#160000
0!
0&
#165000
1!
1&
b1000100 e
b1000100 (
10#
1w$
b1001000 3#
b1001000 )
0R#
1Q#
1&!
b1001000 u#
b1001000 =
0b
1a
#170000
0!
0&
#175000
1!
1&
b1001000 e
b1001000 (
00#
1/#
0w$
1v$
b1001100 3#
b1001100 )
1R#
0&!
1%!
b1001100 u#
b1001100 =
1b
#180000
0!
0&
#185000
1!
1&
b1001100 e
b1001100 (
10#
1w$
b1010000 3#
b1010000 )
0R#
0Q#
1P#
1&!
b1010000 u#
b1010000 =
0b
0a
1`
#190000
0!
0&
#195000
1!
1&
b1010000 e
b1010000 (
00#
0/#
1.#
0w$
0v$
1u$
b1010100 3#
b1010100 )
1R#
0&!
0%!
1$!
b1010100 u#
b1010100 =
1b
#200000
0!
0&
